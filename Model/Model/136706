format 220
"http" // javax.servlet-3.0-sources::javax::servlet::http
  revision 1
  modified_by 2 "william"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "C:\\Program Files\\Java\\javax.servlet-3.0-sources/javax/servlet/http/"
  java_package "javax.servlet.http"
  classview 136066 "http"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 140162 "HttpSession"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "
Provides a way to identify a user across more than one page
request or visit to a Web site and to store information about that user.

<p>The servlet container uses this interface to create a session
between an HTTP client and an HTTP server. The session persists
for a specified time period, across more than one connection or
page request from the user. A session usually corresponds to one 
user, who may visit a site many times. The server can maintain a 
session in many ways such as using cookies or rewriting URLs.

<p>This interface allows servlets to 
<ul>
<li>View and manipulate information about a session, such as
    the session identifier, creation time, and last accessed time
<li>Bind objects to sessions, allowing user information to persist 
    across multiple user connections
</ul>

<p>When an application stores an object in or removes an object from a
session, the session checks whether the object implements
{@link HttpSessionBindingListener}. If it does, 
the servlet notifies the object that it has been bound to or unbound 
from the session. Notifications are sent after the binding methods complete. 
For session that are invalidated or expire, notifications are sent after
the session has been invalidated or expired.

<p> When container migrates a session between VMs in a distributed container
setting, all session attributes implementing the {@link HttpSessionActivationListener}
interface are notified.

<p>A servlet should be able to handle cases in which
the client does not choose to join a session, such as when cookies are
intentionally turned off. Until the client joins the session,
<code>isNew</code> returns <code>true</code>.  If the client chooses 
not to join
the session, <code>getSession</code> will return a different session
on each request, and <code>isNew</code> will always return
<code>true</code>.

<p>Session information is scoped only to the current web application
(<code>ServletContext</code>), so information stored in one context
will not be directly visible in another.

@author	Various

@see 	HttpSessionBindingListener
@see 	HttpSessionContext
"
      operation 149634 "getCreationTime"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the time when this session was created, measured
in milliseconds since midnight January 1, 1970 GMT.

@return				a <code>long</code> specifying
					when this session was created,
					expressed in 
					milliseconds since 1/1/1970 GMT

@exception IllegalStateException	if this method is called on an
					invalidated session
"
      end

      operation 149762 "getId"
	public return_type class_ref 137218 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing the unique identifier assigned 
to this session. The identifier is assigned 
by the servlet container and is implementation dependent.

@return				a string specifying the identifier
					assigned to this session
"
      end

      operation 149890 "getLastAccessedTime"
	public explicit_return_type "long"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
Returns the last time the client sent a request associated with
this session, as the number of milliseconds since midnight
January 1, 1970 GMT, and marked by the time the container received the
request. 

<p>Actions that your application takes, such as getting or setting
a value associated with the session, do not affect the access
time.

@return				a <code>long</code>
					representing the last time 
					the client sent a request associated
					with this session, expressed in 
					milliseconds since 1/1/1970 GMT

@exception IllegalStateException	if this method is called on an
					invalidated session
"
      end

      operation 150018 "getServletContext"
	public return_type class_ref 137090 // ServletContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ServletContext to which this session belongs.
   
@return The ServletContext object for the web application
@since Servlet 2.3
"
      end

      operation 150146 "setMaxInactiveInterval"
	public explicit_return_type "void"
	nparams 1
	  param in name "interval" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies the time, in seconds, between client requests before the 
servlet container will invalidate this session. 

<p>An <tt>interval</tt> value of zero or less indicates that the
session should never timeout.

@param interval		An integer specifying the number
				of seconds 
"
      end

      operation 150274 "getMaxInactiveInterval"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum time interval, in seconds, that 
the servlet container will keep this session open between 
client accesses. After this interval, the servlet container
will invalidate the session.  The maximum time interval can be set
with the <code>setMaxInactiveInterval</code> method.

<p>A return value of zero or less indicates that the
session will never timeout.

@return		an integer specifying the number of
			seconds this session remains open
			between client requests

@see		#setMaxInactiveInterval
"
      end

      operation 150402 "getSessionContext"
	public return_type class_ref 140290 // HttpSessionContext
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
@deprecated 	As of Version 2.1, this method is
			deprecated and has no replacement.
			It will be removed in a future
			version of the Java Servlet API.

"
      end

      operation 150530 "getAttribute"
	public return_type class_ref 138626 // Object
	nparams 1
	  param inout name "name" type class_ref 137218 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object bound with the specified name in this session, or
<code>null</code> if no object is bound under the name.

@param name		a string specifying the name of the object

@return			the object with the specified name

@exception IllegalStateException	if this method is called on an
					invalidated session
"
      end

      operation 150658 "getValue"
	public return_type class_ref 138626 // Object
	nparams 1
	  param inout name "name" type class_ref 137218 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated 	As of Version 2.2, this method is
			replaced by {@link #getAttribute}.

@param name		a string specifying the name of the object

@return			the object with the specified name

@exception IllegalStateException	if this method is called on an
					invalidated session
"
      end

      operation 150786 "getAttributeNames"
	public return_type class_ref 138242 // Enumeration
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an <code>Enumeration</code> of <code>String</code> objects
containing the names of all the objects bound to this session. 

@return			an <code>Enumeration</code> of 
				<code>String</code> objects specifying the
				names of all the objects bound to
				this session

@exception IllegalStateException	if this method is called on an
					invalidated session
"
      end

      operation 150914 "getValueNames"
	public return_type class_ref 137218 // String
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated 	As of Version 2.2, this method is
			replaced by {@link #getAttributeNames}

@return				an array of <code>String</code>
					objects specifying the
					names of all the objects bound to
					this session

@exception IllegalStateException	if this method is called on an
					invalidated session
"
      end

      operation 151042 "setAttribute"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 137218 // String
	  param inout name "value" type class_ref 138626 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds an object to this session, using the name specified.
If an object of the same name is already bound to the session,
the object is replaced.

<p>After this method executes, and if the new object
implements <code>HttpSessionBindingListener</code>,
the container calls 
<code>HttpSessionBindingListener.valueBound</code>. The container then   
notifies any <code>HttpSessionAttributeListener</code>s in the web 
application.

<p>If an object was already bound to this session of this name
that implements <code>HttpSessionBindingListener</code>, its 
<code>HttpSessionBindingListener.valueUnbound</code> method is called.

<p>If the value passed in is null, this has the same effect as calling 
<code>removeAttribute()<code>.


@param name			the name to which the object is bound;
					cannot be null

@param value			the object to be bound

@exception IllegalStateException	if this method is called on an
					invalidated session
"
      end

      operation 151170 "putValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 137218 // String
	  param inout name "value" type class_ref 138626 // Object
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated 	As of Version 2.2, this method is
			replaced by {@link #setAttribute}

@param name			the name to which the object is bound;
					cannot be null

@param value			the object to be bound; cannot be null

@exception IllegalStateException	if this method is called on an
					invalidated session
"
      end

      operation 151298 "removeAttribute"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 137218 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the object bound with the specified name from
this session. If the session does not have an object
bound with the specified name, this method does nothing.

<p>After this method executes, and if the object
implements <code>HttpSessionBindingListener</code>,
the container calls 
<code>HttpSessionBindingListener.valueUnbound</code>. The container
then notifies any <code>HttpSessionAttributeListener</code>s in the web 
application.

@param name				the name of the object to
						remove from this session

@exception IllegalStateException	if this method is called on an
					invalidated session
"
      end

      operation 151426 "removeValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 137218 // String
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated 	As of Version 2.2, this method is
			replaced by {@link #removeAttribute}

@param name				the name of the object to
						remove from this session

@exception IllegalStateException	if this method is called on an
					invalidated session
"
      end

      operation 151554 "invalidate"
	public explicit_return_type "void"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates this session then unbinds any objects bound
to it. 

@exception IllegalStateException	if this method is called on an
					already invalidated session
"
      end

      operation 151682 "isNew"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the client does not yet know about the
session or if the client chooses not to join the session.  For 
example, if the server used only cookie-based sessions, and
the client had disabled the use of cookies, then a session would
be new on each request.

@return 				<code>true</code> if the 
					server has created a session, 
					but the client has not yet joined

@exception IllegalStateException	if this method is called on an
					already invalidated session
"
      end
    end

    class 140290 "HttpSessionContext"
      visibility package stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end
end
